language: c

# Cache can be cleared from the travis settings menu, see docs currently at
# https://docs.travis-ci.com/user/caching#Clearing-Caches
cache:
  - ccache


os:
    - linux

# Setting sudo to false opts in to Travis-CI container-based builds.
sudo: false


# The apt packages below are needed for sphinx builds, which can no longer
# be installed with sudo apt-get.
addons:
    apt:
        packages:
            - graphviz
            - texlive-latex-extra
            - dvipng

env:
    global:
        # SET DEFAULTS TO AVOID REPEATING IN MOST CASES
        - PYTHON_VERSION=3.6
        - NUMPY_VERSION=stable
        - ASTROPY_VERSION=stable
        - CONDA_DEPENDENCIES='Cython matplotlib scipy ipython'
        - PIP_DEPENDENCIES='photutils'
        - MAIN_CMD='python setup.py'
        - SETUP_CMD='test'
        - CONDA_CHANNELS='astropy-ci-extras astropy'
        - SETUP_XVFB=True
        - EVENT_TYPE='push pull_request'

        # PEP8 errors/warnings:
        # E101 - mix of tabs and spaces
        # W191 - use of tabs
        # W291 - trailing whitespace
        # W292 - no newline at end of file
        # W293 - trailing whitespace
        # W391 - blank line at end of file
        # E111 - 4 spaces per indentation level
        # E112 - 4 spaces per indentation level
        # E113 - 4 spaces per indentation level
        # E502 - the backslash is redundant between brackets
        # E722 - do not use bare except
        # E901 - SyntaxError or IndentationError
        # E902 - IOError
        - FLAKE8_OPT="--select=E101,W191,W291,W292,W293,W391,E111,E112,E113,E502,E722,E901,E902"


    matrix:
        # make sure that egg_info works without dependencies
        - PYTHON_VERSION=3.5 SETUP_CMD='egg_info'
        - PYTHON_VERSION=3.6 SETUP_CMD='egg_info'
        - PYTHON_VERSION=3.7 SETUP_CMD='egg_info'


matrix:

    # Don't wait for allowed failures
    fast_finish: true

    include:
        # Try MacOS X
        - os: osx
          env: SETUP_CMD='test'
               CONDA_DEPENDENCIES=$CONDA_DEPENDENCIES
               PIP_DEPENDENCIES=$PIP_DEPENDENCIES


        - os: linux
        # Check for sphinx doc build warnings - we do this first because
        # it may run for a long time. Need to use sphinx <1.6 until photutils 0.4 is out.
        - python: 3.5
          env: SETUP_CMD='build_sphinx -w' CONDA_DEPENDENCIES='Cython ipython scipy matplotlib ginga'

       # Try Astropy development and LTS versions
        - python: 3.5
          env: ASTROPY_VERSION=lts
        - python: 3.5
          env: ASTROPY_VERSION=development
        - python: 3.6
          env: ASTROPY_VERSION=development

        # Try with optional dependencies disabled
        - python: 3.5
          env: PIP_DEPENDENCIES=''
        - python: 3.6
          env: PIP_DEPENDENCIES=''
        - python: 3.7
          env: PIP_DEPENDENCIES=''

        # Try older numpy versions
        - python: 3.6
          env: NUMPY_VERSION=1.12
        - python: 3.6
          env: NUMPY_VERSION=1.13
        - python: 3.6
          env: NUMPY_VERSION=1.14


        # Try numpy pre-release
        - python: 3.6
          env: NUMPY_VERSION=prerelease
        - python: 3.7
          env: NUMPY_VERSION=prerelease

        # Do a coverage tests
        - python: 3.5
          env: SETUP_CMD='test --coverage'


        # Do a pep8 test
        - python: 3.5
          env: MAIN_CMD="flake8 imexam --count $FLAKE8_OPT" SETUP_CMD=''

    allow_failures:
        # The build with numpy pre-release halts in the middle without
        # showing any obvious reason, thus allowing it to fail for now.
        - python: 3.7
          env: NUMPY_VERSION=prerelease


before_install:
    - uname -a
    - python --version
    - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then ( sudo Xvfb :99 -ac -screen 0 1024x768x8; sleep 3; echo ok )& fi

    # We now use the ci-helpers package to set up our testing environment.
    # This is done by using Miniconda and then using conda and pip to install
    # dependencies. Which dependencies are installed using conda and pip is
    # determined by the CONDA_DEPDENDENCIES and PIP_DEPENDENCIES variables,
    # which should be space-delimited lists of package names. See the README
    # in https://github.com/astropy/ci-helpers for information about the full
    # list of environment variables that can be used to customize your
    # environment. In some cases, ci-helpers may not offer enough flexibility
    # in how to install a package, in which case you can have additional
    # commands in the install: section below.


install:
    - git clone git://github.com/astropy/ci-helpers.git
    - source ci-helpers/travis/setup_conda.sh
    - pip install pytest-pep8

    # As described above, using ci-helpers, you should be able to set up an
    # environment with dependencies installed using conda and pip, but in some
    # cases this may not provide enough flexibility in how to install a
    # specific dependency (and it will not be able to install non-Python
    # dependencies). Therefore, you can also include commands below (as
    # well as at the start of the install section or in the before_install
    # section if they are needed before setting up conda) to install any
    # other dependencies.


script:
    - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then ( xvfb-run -a $MAIN_CMD  $SETUP_CMD ) fi
    - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then ( $MAIN_CMD $SETUP_CMD ) fi


after_success:
    - if [[ $SETUP_CMD == 'test --coverage' ]]; then coveralls --rcfile='imexam/tests/coveragerc'; fi
